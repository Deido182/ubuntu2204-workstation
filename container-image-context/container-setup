#!/bin/bash

# Manage persistent storage

dirs_list=("${USER_PERS_STORAGE_DIR} ${USER_FREE_PERS_STORAGE_DIR} ${USER_STRUCT_PERS_STORAGE_DIR} ${USER_STRUCT_PERS_STORAGE_DIR_ROOT}")
for dir in ${dirs_list}; do
	if [ ! -d "${dir}" ]; then
  		mkdir --parents "${dir}"
	fi
done
if [ ! -f "${USER_STRUCT_PERS_FILES_LIST}" ]; then
        touch "${USER_STRUCT_PERS_FILES_LIST}"
fi

chown root:root "${PERS_STORAGE_DIR}" "${USER_PERS_STORAGE_DIR}"
chmod 770 "${USER_FREE_PERS_STORAGE_DIR}" "${USER_STRUCT_PERS_STORAGE_DIR}" "${USER_STRUCT_PERS_FILES_LIST}" "${USER_STRUCT_PERS_STORAGE_DIR_ROOT}"
chgrp "${USER_PERS_STORAGE_GROUP}" "${USER_FREE_PERS_STORAGE_DIR}" "${USER_STRUCT_PERS_STORAGE_DIR}" "${USER_STRUCT_PERS_FILES_LIST}" \
	"${USER_STRUCT_PERS_STORAGE_DIR_ROOT}"

# Store required user files on closing
function store() {
	echo "Going to persistently store the following user files:"
	echo $(cat "${USER_STRUCT_PERS_FILES_LIST}")
	# Remove old content
	rm -rf ${USER_STRUCT_PERS_STORAGE_DIR_ROOT}/*
	cd /
	while IFS= read -r file_path; do
                runuser user -c "cp --preserve --parents ${file_path:1} ${USER_STRUCT_PERS_STORAGE_DIR_ROOT}"
        done < "${USER_STRUCT_PERS_FILES_LIST}"
}
trap 'store' EXIT SIGTERM SIGKILL

# Load user persistent files on opening
function load() {
	echo "Going to load the following user files:"
        echo $(cat "${USER_STRUCT_PERS_FILES_LIST}")
	cd "${USER_STRUCT_PERS_STORAGE_DIR_ROOT}"
	while IFS= read -r file_path; do
		runuser user -c "cp --preserve --parents ${file_path:1} /"
	done < "${USER_STRUCT_PERS_FILES_LIST}"
}
load

# Finally login with the new user (as we are root, pw is not required)
cd /home/user
# Without '-' it does not perform login (and therefore preserves env vars)
su user
